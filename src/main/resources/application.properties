spring.datasource.url=jdbc:postgresql://localhost:5432/umbumaker
<<<<<<< HEAD

spring.datasource.username=umbumaker
spring.datasource.password=umbumaker123

spring.jpa.hibernate.ddl-auto=validate

spring.jpa.show-sql=false
#spring.datasource.driverClassName=org.postgresql.Driver 
spring.jpa.database=POSTGRESQL

#Flyway
spring.flyway.baseline-on-migrate=true
=======
spring.datasource.username=postgres
spring.datasource.password=12345

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.security.oauth2.client.registration.google.client-id=1036797586137-4bp9emcahrt3nfuqhcivive8ndfcja06.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name
>>>>>>> ea85d6fa93e52072ee8394bd366664f0229698b5
